common_controls:
  - CCC.C01 # Prevent Unencrypted Requests
  - CCC.C02 # Ensure Data Encryption at Rest for All Stored Data
  - CCC.C03 # Implement Multi-factor Authentication (MFA) for Access
  - CCC.C04 # Log All Access and Changes
  - CCC.C05 # Prevent Access from Untrusted Entities
  - CCC.C06 # Prevent Deployment in Restricted Regions
  - CCC.C07 # Alert on Unusual Enumeration Activity
  - CCC.C09 # Prevent Tampering, Deletion, or Unauthorized Access to Access Logs
  - CCC.C10 # Prevent Data Replication to Destinations Outside of Defined Trust Perimeter

controls:
  - id: CCC.ObjStor.C01
    title: Prevent Requests to Buckets or Objects with Untrusted KMS Keys
    objective: |
      Prevent any requests to object storage buckets or objects using
      untrusted KMS keys to protect against unauthorized data encryption
      that can impact data availability and integrity.
    control_family: Data
    nist_csf: PR.DS-1 # Data-at-rest is protected
    threats:
      - CCC.TH01 # Access Control is Misconfigured
      - CCC.TH06 # Data is Lost or Corrupted
    control_mappings:
      CCM:
        - DCS-04 # Data Protection and Encryption
        - DCS-06 # Data Integrity
      ISO_27001:
        - 2013 A.10.1.1 # Policy on the use of cryptographic controls
      NIST_800_53:
        - SC-28 # Protection of Information at Rest
    test_requirements:
      - id: CCC.ObjStor.C01.TR01
        text: |
          When a request is made to read a protected bucket, the service
          MUST prevent any request using KMS keys not listed as trusted by
          the organization.
        tlp_levels:
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C01.TR02
        text: |
          When a request is made to read a protected object, the service
          MUST prevent any request using KMS keys not listed as trusted by
          the organization.
        tlp_levels:
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C01.TR03
        text: |
          When a request is made to write to a bucket, the service MUST
          prevent any request using KMS keys not listed as trusted by the
          organization.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C01.TR04
        text: |
          When a request is made to write to an object, the service MUST
          prevent any request using KMS keys not listed as trusted by the
          organization.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red

  - id: CCC.ObjStor.C02
    title: Enforce Uniform Bucket-level Access to Prevent Inconsistent Permissions
    objective: |
      Ensure that uniform bucket-level access is enforced across all
      object storage buckets. This prevents the use of ad-hoc or
      inconsistent object-level permissions, ensuring centralized,
      consistent, and secure access management in accordance with the
      principle of least privilege.
    control_family: Identity and Access Management
    nist_csf: PR.AC-4 # Access permissions and authorizations are managed,
    # incorporating the principles of least privilege and separation of duties
    threats:
      - CCC.TH01 # Access Control is Misconfigured
    control_mappings:
      CCM:
        - DCS-09 # Access Control
      ISO_27001:
        - 2013 A.9.4.1 # Information Access Restriction
      NIST_800_53:
        - AC-3 # Access Enforcement
        - AC-6 # Least Privilege
    test_requirements:
      - id: CCC.ObjStor.C02.TR01
        text: |
          When a permission set is allowed for an object in a bucket, the
          service MUST allow the same permission set to access all objects
          in the same bucket.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C02.TR02
        text: |
          When a permission set is denied for an object in a bucket, the
          service MUST deny the same permission set to access all objects
          in the same bucket.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red

  - id: CCC.ObjStor.C03
    title: Prevent Bucket Deletion Through Irrevocable Bucket Retention Policy
    objective: |
      Ensure that object storage bucket is not deleted after creation,
      and that the preventative measure cannot be unset.
    control_family: Data
    nist_csf: PR.DS-1 # Data-at-rest is protected
    threats:
      - CCC.TH06 # Data is Lost or Corrupted
    control_mappings:
      CCM: []
      ISO_27001: []
      NIST_800_53: []
    test_requirements:
      - id: CCC.ObjStor.C03.TR01
        text: |
          When an object storage bucket deletion is attempted, the bucket MUST be
          fully recoverable for a set time-frame after deletion is requested.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C03.TR02
        text: |
          When an attempt is made to modify the retention policy for an object
          storage bucket, the service MUST prevent the policy from being modified.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red

  - id: CCC.ObjStor.C04
    title: Objects have an Effective Retention Policy by Default
    objective: |
      Ensure that all objects stored in the object storage system have a
      retention policy applied by default, preventing premature deletion
      or modification of objects and ensuring compliance with data retention
      regulations.
    control_family: Data
    nist_csf: PR.DS-1 # Data-at-rest is protected
    threats:
      - CCC.TH06 # Data is Lost or Corrupted
    control_mappings:
      CCM: []
      ISO_27001: []
      NIST_800_53: []
    test_requirements:
      - id: CCC.ObjStor.C04.TR01
        text: |
          When an object is uploaded to the object storage system, the object
          MUST automatically receive a default retention policy that prevents
          premature deletion or modification.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C04.TR02
        text: |
          When an attempt is made to delete or modify an object that is subject
          to an active retention policy, the service MUST prevent the action
          from being completed.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red

  - id: CCC.ObjStor.C05
    title: Versioning is Enabled for All Objects in the Bucket
    objective: |
      Ensure that versioning is enabled for all objects stored in the object
      storage bucket to enable recovery of previous versions of objects in
      case of loss or corruption.
    control_family: Data
    nist_csf: PR.DS-1 # Data-at-rest is protected
    threats:
      - CCC.TH06 # Data is Lost or Corrupted
    control_mappings:
      CCM: []
      ISO_27001: []
      NIST_800_53: []
    test_requirements:
      - id: CCC.ObjStor.C05.TR01
        text: |
          When an object is uploaded to the object storage bucket, the object
          MUST be stored with a unique identifier.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C06.TR02
        text: |
          When an object is modified, the service MUST assign a new unique
          identifier to the modified object to differentiate it from the
          previous version.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C06.TR03
        text: |
          When an object is modified, the service MUST allow for recovery
          of previous versions of the object.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red
      - id: CCC.ObjStor.C05.TR02
        text: |
          When an object is deleted, the service MUST retain other versions of
          the object to allow for recovery of previous versions.
        tlp_levels:
          - tlp_clear
          - tlp_green
          - tlp_amber
          - tlp_red

  - id: CCC.ObjStor.C06
    title: Access Logs are Stored in a Separate Data Store
    objective: |
      Ensure that access logs for object storage buckets are stored in a
      separate data store to protect against unauthorized access, tampering,
      or deletion of logs (Logbuckets are exempt from this requirement,
      but must be tlp_red).
    control_family: Data
    nist_csf: PR.DS-6 # Integrity checking mechanisms are used
    threats:
      - CCC.TH07 # Logs are Tampered With or Deleted
      - CCC.TH09 # Logs or Monitoring Data are Read by Unauthorized Users
    control_mappings:
      CCM: []
      ISO_27001: []
      NIST_800_53: []
    test_requirements:
      - id: CCC.ObjStor.C06.TR01
        text: |
          When an object storage bucket is accessed, the service MUST store
          access logs in a separate data store.
        tlp_levels:
          - tlp_amber
          - tlp_red
