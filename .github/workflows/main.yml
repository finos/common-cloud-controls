name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      build_targets:
        description: 'List of Build Targets (comma-separated)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./delivery-tooling
    steps:
      - uses: actions/checkout@v4
        name: Build
        with: 
          ref: release-pipeline-code

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Display Go version
        run: go version

      - name: Get dependencies
        run: go mod download
  
  process-targets:
    runs-on: ubuntu-latest
    steps:
    - name: Process build targets
      id: process_targets
      run: |
        # Read the input
        input_targets="${{ github.event.inputs.build_targets }}"
        
        # Replace commas with spaces, then split on spaces
        targets_array=($(echo "$input_targets" | tr ',' ' '))
        
        # Convert to JSON array
        json_targets=$(printf '%s\n' "${targets_array[@]}" | jq -R . | jq -sc .)
        
        echo "Processed targets: $json_targets"
        echo "targets=$json_targets" >> $GITHUB_OUTPUT

    - name: Use processed targets
      run: |
        echo "Targets: ${{ steps.process_targets.outputs.targets }}"
        
        # Example of iterating through the targets
        echo '${{ steps.process_targets.outputs.targets }}' | jq -c '.' | while read -r target; do
          echo "Processing target: $target"
          # Add your processing logic here
        done
  
  matrix-job:
    needs: process-targets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{ fromJson(needs.process-targets.outputs.targets) }}
    
    steps:
    - name: Process ${{ matrix.target }}
      run: |
        echo "Processing target: ${{ matrix.target }}"
        # Add your processing logic here

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #     - name: Deploy
  #       run: echo "Deploying to production"

  # release:
  #   needs: [build, deploy]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: my-artifact
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         draft: false
  #         prerelease: false
  #     - name: Upload Release Artifacts
  #       uses: actions/upload-artifact@v4.4.0
  #       with:
  #         name: my-artifact
  #         path: path/to/artifact/world.txt
